name: Deploy to Production

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deployment
    steps:
      - uses: actions/checkout@v2

      - uses: docker/setup-buildx-action@v1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v1
        id: ecr-login

      - name: Generate Version Code
        id: version
        run: echo "::set-output name=code::$(date +'%Y%m%d%H%M%S')"

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker Image and Push to ECR
        env:
          REPOSITORY: healthin-server
          REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          IMAGE_TAG: ${{ steps.version.outputs.code }}
        run: |
          docker buildx build \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --cache-to "type=local,dest=/tmp/.buildx-cache" \
            --platform linux/amd64 \
            --tag $REGISTRY/$REPOSITORY:latest \
            --tag $REGISTRY/$REPOSITORY:$IMAGE_TAG \
            --target production \
            --build-arg APP_PORT=3000 \
            --push .
